{"version":3,"sources":["ng://ng-fuse/src/ngfuse.service.ts","ng://ng-fuse/src/ngfuse.pipe.ts","ng://ng-fuse/index.ts"],"names":["NgFuseService","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","minSearchStringLenght","this","defaults","prototype","search","collection","searchString","options","Object","assign","searchOptions","length","Fuse","Injectable","NgFusePipe","fuseService","transform","Pipe","args","name","NgFuseModule","NgModule","declarations","imports","CommonModule","FormsModule","exports","providers"],"mappings":"qZAAA,IAAAA,EAAA,WAiBI,SAAAA,kBAZ0B,CACtBC,YAAY,EACZC,UAAW,GACXC,SAAU,EACVC,SAAU,IACVC,iBAAkB,GAClBC,mBAAoB,EACpBC,sBAAuB,sBAGIC,KAAKC,gBAIpCT,EAAAU,UAAAC,OAAA,SAAOC,EAA2BC,EAAsBC,QAAA,IAAAA,IAAAA,EAAA,IACpDC,OAAOC,OAAOR,KAAKS,cAAeT,KAAKC,SAAUK,GAGjD,OAAID,GAAgBA,EAAaK,QAAUV,KAAKS,cAAcV,sBAC7C,IAAIY,EAAKP,EAAYJ,KAAKS,eACxBN,OAAOE,GAGfD,uBAzBlBQ,EAAAA,qDAHD,GCAAC,EAAA,WAMI,SAAAA,EAAoBC,GAAAd,KAAAc,YAAAA,SAEpBD,EAAAX,UAAAa,UAAA,SAAUX,EAA2BC,EAAsBC,GACvD,YADuD,IAAAA,IAAAA,EAAA,IAChDN,KAAKc,YAAYX,OAAOC,EAAYC,EAAcC,wBANhEU,EAAAA,KAAIC,KAAA,CAAC,CAAEC,KAAM,sDAFU1B,OADxB,GCAA2B,EAAA,oDAOCC,EAAAA,SAAQH,KAAA,CAAC,CACTI,aAAc,CACbR,GAEDS,QAAS,CACRC,EAAAA,aACAC,EAAAA,aAEDC,QAAS,CACRZ,GAEDa,UAAW,CAAClC,SAlBb","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as Fuse from 'fuse.js';\r\n\r\n@Injectable()\r\nexport class NgFuseService {\r\n    defaults: NgFuseOptions = {\r\n        shouldSort: true,\r\n        threshold: 0.4,\r\n        location: 0,\r\n        distance: 100,\r\n        maxPatternLength: 32,\r\n        minMatchCharLength: 1,\r\n        minSearchStringLenght: 1\r\n    }\r\n\r\n    searchOptions: NgFuseOptions = this.defaults;\r\n\r\n    constructor() { };\r\n\r\n    search(collection: Array<Object>, searchString: string, options: NgFuseOptions = {}) {\r\n        Object.assign(this.searchOptions, this.defaults, options);\r\n\r\n        let results = []\r\n        if (searchString && searchString.length >= this.searchOptions.minSearchStringLenght) {\r\n            const fuse = new Fuse(collection, this.searchOptions);\r\n            results = fuse.search(searchString);\r\n            return results;\r\n        } else {\r\n            return collection;\r\n        }\r\n    };\r\n}\r\n\r\nexport interface NgFuseOptions extends Fuse.FuseOptions {\r\n    minSearchStringLenght?: 1;\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { NgFuseOptions, NgFuseService } from './ngfuse.service'\r\n\r\n@Pipe({ name: \"ngFuse\" })\r\nexport class NgFusePipe implements PipeTransform {\r\n\r\n    constructor(private fuseService: NgFuseService) { }\r\n\r\n    transform(collection: Array<Object>, searchString: string, options: NgFuseOptions = {}): any {\r\n        return this.fuseService.search(collection, searchString, options);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NgFuseOptions, NgFuseService } from './src/ngfuse.service';\r\nimport { NgFusePipe } from './src/ngfuse.pipe';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tNgFusePipe\r\n\t],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFormsModule\r\n\t],\r\n\texports: [\r\n\t\tNgFusePipe\r\n\t],\r\n\tproviders: [NgFuseService],\r\n})\r\nexport class NgFuseModule { }\r\nexport { NgFuseOptions, NgFuseService } from './src/ngfuse.service';\r\nexport { NgFusePipe } from './src/ngfuse.pipe';\r\n"]}